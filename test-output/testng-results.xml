<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="35" passed="30" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-12T07:37:43 IST" name="Default suite" finished-at="2025-10-12T07:37:56 IST" duration-ms="12662">
    <groups>
    </groups>
    <test started-at="2025-10-12T07:37:43 IST" name="Default test" finished-at="2025-10-12T07:37:56 IST" duration-ms="12662">
      <class name="Pckg_05_10_2025.GetResponse_4">
        <test-method signature="GetResponse()[pri:0, instance:Pckg_05_10_2025.GetResponse_4@7a8c8dcf]" started-at="2025-10-12T07:37:43 IST" name="GetResponse" finished-at="2025-10-12T07:37:46 IST" duration-ms="2980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResponse -->
      </class> <!-- Pckg_05_10_2025.GetResponse_4 -->
      <class name="Pckg_08_10_2025.Response_1">
        <test-method signature="Get200Code()[pri:0, instance:Pckg_08_10_2025.Response_1@7d20d0b]" started-at="2025-10-12T07:37:51 IST" name="Get200Code" finished-at="2025-10-12T07:37:52 IST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200Code -->
      </class> <!-- Pckg_08_10_2025.Response_1 -->
      <class name="NewResponse_06_10_2025.Response_5">
        <test-method signature="Response200()[pri:0, instance:NewResponse_06_10_2025.Response_5@4c178a76]" started-at="2025-10-12T07:37:49 IST" name="Response200" finished-at="2025-10-12T07:37:49 IST" duration-ms="224" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The parameter "price" was used but not defined. Define parameters using the JsonPath.param(...) function]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The parameter "price" was used but not defined. Define parameters using the JsonPath.param(...) function
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:286)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:52)
at io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)
at io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)
at io.restassured.path.json.JsonPath.get(JsonPath.java:203)
at NewResponse_06_10_2025.Response_5.Response200(Response_5.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: groovy.lang.MissingPropertyException: No such property: price for class: Script1
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:67)
at org.codehaus.groovy.vmplugin.v8.IndyGuardsFiltersAndSignatures.unwrap(IndyGuardsFiltersAndSignatures.java:163)
at org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:321)
at Script1.run(Script1.groovy:1)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:460)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:495)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:469)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:89)
at io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Response200 -->
      </class> <!-- NewResponse_06_10_2025.Response_5 -->
      <class name="Pckg_05_10_2025.GetResponse_1">
        <test-method signature="Get200Code()[pri:0, instance:Pckg_05_10_2025.GetResponse_1@710f4dc7]" started-at="2025-10-12T07:37:46 IST" name="Get200Code" finished-at="2025-10-12T07:37:47 IST" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200Code -->
      </class> <!-- Pckg_05_10_2025.GetResponse_1 -->
      <class name="NewResponse_06_10_2025.GetResponse200_3">
        <test-method signature="Get200Code()[pri:0, instance:NewResponse_06_10_2025.GetResponse200_3@fa4c865]" started-at="2025-10-12T07:37:49 IST" name="Get200Code" finished-at="2025-10-12T07:37:50 IST" duration-ms="249" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The parameter "price" was used but not defined. Define parameters using the JsonPath.param(...) function]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The parameter "price" was used but not defined. Define parameters using the JsonPath.param(...) function
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:286)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:52)
at io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)
at io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)
at io.restassured.path.json.JsonPath.get(JsonPath.java:203)
at NewResponse_06_10_2025.GetResponse200_3.Get200Code(GetResponse200_3.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: groovy.lang.MissingPropertyException: No such property: price for class: Script1
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:67)
at org.codehaus.groovy.vmplugin.v8.IndyGuardsFiltersAndSignatures.unwrap(IndyGuardsFiltersAndSignatures.java:163)
at org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:321)
at Script1.run(Script1.groovy:1)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:460)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:495)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:469)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:89)
at io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200Code -->
      </class> <!-- NewResponse_06_10_2025.GetResponse200_3 -->
      <class name="Response_1">
        <test-method signature="Response200Code()[pri:0, instance:Response_1@77f1baf5]" started-at="2025-10-12T07:37:52 IST" name="Response200Code" finished-at="2025-10-12T07:37:52 IST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Response200Code -->
      </class> <!-- Response_1 -->
      <class name="Pckg_05_10_2025.GetResponse_2">
        <test-method signature="GetResponse200Code()[pri:0, instance:Pckg_05_10_2025.GetResponse_2@1ff4931d]" started-at="2025-10-12T07:37:47 IST" name="GetResponse200Code" finished-at="2025-10-12T07:37:47 IST" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResponse200Code -->
      </class> <!-- Pckg_05_10_2025.GetResponse_2 -->
      <class name="Response_200">
        <test-method signature="Get200()[pri:0, instance:Response_200@3bd82cf5]" started-at="2025-10-12T07:37:50 IST" name="Get200" finished-at="2025-10-12T07:37:50 IST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200 -->
      </class> <!-- Response_200 -->
      <class name="Pckg_08_10_2025.Response_2">
        <test-method signature="GetCode200()[pri:0, instance:Pckg_08_10_2025.Response_2@41a2befb]" started-at="2025-10-12T07:37:52 IST" name="GetCode200" finished-at="2025-10-12T07:37:52 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCode200 -->
      </class> <!-- Pckg_08_10_2025.Response_2 -->
      <class name="pckg_Response_10_10_2025.Response_200_1">
        <test-method signature="GetResponse()[pri:0, instance:pckg_Response_10_10_2025.Response_200_1@65e98b1c]" started-at="2025-10-12T07:37:47 IST" name="GetResponse" finished-at="2025-10-12T07:37:47 IST" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResponse -->
      </class> <!-- pckg_Response_10_10_2025.Response_200_1 -->
      <class name="Pckg_08_10_2025.Response_4">
        <test-method signature="Get200()[pri:0, instance:Pckg_08_10_2025.Response_4@6c40365c]" started-at="2025-10-12T07:37:52 IST" name="Get200" finished-at="2025-10-12T07:37:52 IST" duration-ms="219" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The parameter "value" was used but not defined. Define parameters using the JsonPath.param(...) function]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The parameter "value" was used but not defined. Define parameters using the JsonPath.param(...) function
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:286)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:52)
at io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)
at io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)
at io.restassured.path.json.JsonPath.get(JsonPath.java:203)
at Pckg_08_10_2025.Response_4.Get200(Response_4.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: groovy.lang.MissingPropertyException: No such property: value for class: Script1
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:67)
at org.codehaus.groovy.vmplugin.v8.IndyGuardsFiltersAndSignatures.unwrap(IndyGuardsFiltersAndSignatures.java:163)
at org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:321)
at Script1.run(Script1.groovy:1)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:460)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:495)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:469)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:89)
at io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200 -->
      </class> <!-- Pckg_08_10_2025.Response_4 -->
      <class name="pckg_Response_10_10_2025.Response_2">
        <test-method signature="Response200()[pri:0, instance:pckg_Response_10_10_2025.Response_2@131ef10]" started-at="2025-10-12T07:37:53 IST" name="Response200" finished-at="2025-10-12T07:37:53 IST" duration-ms="594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Response200 -->
      </class> <!-- pckg_Response_10_10_2025.Response_2 -->
      <class name="Response200_12_10_2025.Response_200_1">
        <test-method signature="Response200()[pri:0, instance:Response200_12_10_2025.Response_200_1@7bedc48a]" started-at="2025-10-12T07:37:52 IST" name="Response200" finished-at="2025-10-12T07:37:53 IST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Response200 -->
      </class> <!-- Response200_12_10_2025.Response_200_1 -->
      <class name="Get200">
        <test-method signature="Get200Code()[pri:0, instance:Get200@544fa968]" started-at="2025-10-12T07:37:50 IST" name="Get200Code" finished-at="2025-10-12T07:37:50 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200Code -->
      </class> <!-- Get200 -->
      <class name="pckg_Response_10_10_2025.Response_5">
        <test-method signature="Get200()[pri:0, instance:pckg_Response_10_10_2025.Response_5@55b0dcab]" started-at="2025-10-12T07:37:53 IST" name="Get200" finished-at="2025-10-12T07:37:54 IST" duration-ms="402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200 -->
      </class> <!-- pckg_Response_10_10_2025.Response_5 -->
      <class name="pckg_Response_10_10_2025.Response_4">
        <test-method signature="Get200()[pri:0, instance:pckg_Response_10_10_2025.Response_4@38afe297]" started-at="2025-10-12T07:37:54 IST" name="Get200" finished-at="2025-10-12T07:37:54 IST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200 -->
      </class> <!-- pckg_Response_10_10_2025.Response_4 -->
      <class name="pckg_Response_10_10_2025.Response_3">
        <test-method signature="GetResponse200()[pri:0, instance:pckg_Response_10_10_2025.Response_3@2df3b89c]" started-at="2025-10-12T07:37:54 IST" name="GetResponse200" finished-at="2025-10-12T07:37:54 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResponse200 -->
      </class> <!-- pckg_Response_10_10_2025.Response_3 -->
      <class name="pckg_09_10_2025.Response_3">
        <test-method signature="Get200Response()[pri:0, instance:pckg_09_10_2025.Response_3@23348b5d]" started-at="2025-10-12T07:37:54 IST" name="Get200Response" finished-at="2025-10-12T07:37:54 IST" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200Response -->
      </class> <!-- pckg_09_10_2025.Response_3 -->
      <class name="NewResponse_06_10_2025.Response_200_2">
        <test-method signature="GetResponse200()[pri:0, instance:NewResponse_06_10_2025.Response_200_2@70325e14]" started-at="2025-10-12T07:37:54 IST" name="GetResponse200" finished-at="2025-10-12T07:37:55 IST" duration-ms="367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResponse200 -->
      </class> <!-- NewResponse_06_10_2025.Response_200_2 -->
      <class name="Packg_07_10_2025.Response200_1">
        <test-method signature="Response200()[pri:0, instance:Packg_07_10_2025.Response200_1@247bddad]" started-at="2025-10-12T07:37:50 IST" name="Response200" finished-at="2025-10-12T07:37:50 IST" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Response200 -->
      </class> <!-- Packg_07_10_2025.Response200_1 -->
      <class name="Pckg_05_10_2025.Get_Response_3">
        <test-method signature="GetCode()[pri:0, instance:Pckg_05_10_2025.Get_Response_3@d35dea7]" started-at="2025-10-12T07:37:50 IST" name="GetCode" finished-at="2025-10-12T07:37:51 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCode -->
      </class> <!-- Pckg_05_10_2025.Get_Response_3 -->
      <class name="Response200_12_10_2025.Response200_2">
        <test-method signature="Get200()[pri:0, instance:Response200_12_10_2025.Response200_2@37ceb1df]" started-at="2025-10-12T07:37:55 IST" name="Get200" finished-at="2025-10-12T07:37:55 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200 -->
      </class> <!-- Response200_12_10_2025.Response200_2 -->
      <class name="Packg_07_10_2025.Response_3">
        <test-method signature="Response200()[pri:0, instance:Packg_07_10_2025.Response_3@7c9d8e2]" started-at="2025-10-12T07:37:55 IST" name="Response200" finished-at="2025-10-12T07:37:55 IST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Response200 -->
      </class> <!-- Packg_07_10_2025.Response_3 -->
      <class name="NewResponse_06_10_2025.GetResponse_1">
        <test-method signature="GetResponse200()[pri:0, instance:NewResponse_06_10_2025.GetResponse_1@7770f470]" started-at="2025-10-12T07:37:51 IST" name="GetResponse200" finished-at="2025-10-12T07:37:51 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResponse200 -->
      </class> <!-- NewResponse_06_10_2025.GetResponse_1 -->
      <class name="Packg_07_10_2025.Response_2">
        <test-method signature="Get200Code()[pri:0, instance:Packg_07_10_2025.Response_2@20d525]" started-at="2025-10-12T07:37:55 IST" name="Get200Code" finished-at="2025-10-12T07:37:56 IST" duration-ms="358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200Code -->
      </class> <!-- Packg_07_10_2025.Response_2 -->
      <class name="Packg_07_10_2025.Response_200">
        <test-method signature="Responce200()[pri:0, instance:Packg_07_10_2025.Response_200@5e5d171f]" started-at="2025-10-12T07:37:51 IST" name="Responce200" finished-at="2025-10-12T07:37:51 IST" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Responce200 -->
      </class> <!-- Packg_07_10_2025.Response_200 -->
      <class name="Pckg_08_10_2025.GetResponse200_3">
        <test-method signature="ResponseCode200()[pri:0, instance:Pckg_08_10_2025.GetResponse200_3@61322f9d]" started-at="2025-10-12T07:37:47 IST" name="ResponseCode200" finished-at="2025-10-12T07:37:48 IST" duration-ms="257" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid JSON expression:
Script1.groovy: 1: unable to resolve class                          Id
 @ line 1, column 30.
                            Id are
                                ^

1 error
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid JSON expression:
Script1.groovy: 1: unable to resolve class                          Id
 @ line 1, column 30.
                            Id are
                                ^

1 error

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:286)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:66)
at io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)
at io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)
at io.restassured.path.json.JsonPath.get(JsonPath.java:203)
at Pckg_08_10_2025.GetResponse200_3.ResponseCode200(GetResponse200_3.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 1: unable to resolve class restAssuredJsonRootObject.Id
 @ line 1, column 30.
   restAssuredJsonRootObject.Id are
                                ^

1 error

at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:292)
at org.codehaus.groovy.control.CompilationUnit$ISourceUnitOperation.doPhaseOperation(CompilationUnit.java:910)
at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:692)
at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:666)
at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:373)
at groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:316)
at org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)
at org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)
at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:314)
at groovy.lang.GroovyShell.parseClass(GroovyShell.java:572)
at groovy.lang.GroovyShell.parse(GroovyShell.java:585)
at groovy.lang.GroovyShell.parse(GroovyShell.java:597)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:459)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:495)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:469)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:89)
at io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResponseCode200 -->
      </class> <!-- Pckg_08_10_2025.GetResponse200_3 -->
      <class name="ApiTest_1">
        <test-method signature="GetResponse200()[pri:0, instance:ApiTest_1@6ad82709]" started-at="2025-10-12T07:37:48 IST" name="GetResponse200" finished-at="2025-10-12T07:37:48 IST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResponse200 -->
      </class> <!-- ApiTest_1 -->
      <class name="pckg_09_10_2025.Class_Response200">
        <test-method signature="Get200()[pri:0, instance:pckg_09_10_2025.Class_Response200@6200f9cb]" started-at="2025-10-12T07:37:56 IST" name="Get200" finished-at="2025-10-12T07:37:56 IST" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200 -->
      </class> <!-- pckg_09_10_2025.Class_Response200 -->
      <class name="Package_Response_11_10_2025.Response_3">
        <test-method signature="GetResponse200()[pri:0, instance:Package_Response_11_10_2025.Response_3@510f3d34]" started-at="2025-10-12T07:37:48 IST" name="GetResponse200" finished-at="2025-10-12T07:37:48 IST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResponse200 -->
      </class> <!-- Package_Response_11_10_2025.Response_3 -->
      <class name="NewResponse_06_10_2025.Response_6">
        <test-method signature="Response200()[pri:0, instance:NewResponse_06_10_2025.Response_6@7817fd62]" started-at="2025-10-12T07:37:48 IST" name="Response200" finished-at="2025-10-12T07:37:48 IST" duration-ms="375" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The parameter "price" was used but not defined. Define parameters using the JsonPath.param(...) function]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The parameter "price" was used but not defined. Define parameters using the JsonPath.param(...) function
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:286)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:52)
at io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)
at io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)
at io.restassured.path.json.JsonPath.get(JsonPath.java:203)
at NewResponse_06_10_2025.Response_6.Response200(Response_6.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: groovy.lang.MissingPropertyException: No such property: price for class: Script1
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:67)
at org.codehaus.groovy.vmplugin.v8.IndyGuardsFiltersAndSignatures.unwrap(IndyGuardsFiltersAndSignatures.java:163)
at org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:321)
at Script1.run(Script1.groovy:1)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:460)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:495)
at groovy.lang.GroovyShell.evaluate(GroovyShell.java:469)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:89)
at io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Response200 -->
      </class> <!-- NewResponse_06_10_2025.Response_6 -->
      <class name="pckg_09_10_2025.Response_200">
        <test-method signature="Get200Response()[pri:0, instance:pckg_09_10_2025.Response_200@24313fcc]" started-at="2025-10-12T07:37:51 IST" name="Get200Response" finished-at="2025-10-12T07:37:51 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get200Response -->
      </class> <!-- pckg_09_10_2025.Response_200 -->
      <class name="Package_Response_11_10_2025.Responsse_2">
        <test-method signature="Response200()[pri:0, instance:Package_Response_11_10_2025.Responsse_2@8297b3a]" started-at="2025-10-12T07:37:48 IST" name="Response200" finished-at="2025-10-12T07:37:49 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Response200 -->
      </class> <!-- Package_Response_11_10_2025.Responsse_2 -->
      <class name="NewResponse_06_10_2025.Responce_4">
        <test-method signature="Response200()[pri:0, instance:NewResponse_06_10_2025.Responce_4@2362f559]" started-at="2025-10-12T07:37:49 IST" name="Response200" finished-at="2025-10-12T07:37:49 IST" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Response200 -->
      </class> <!-- NewResponse_06_10_2025.Responce_4 -->
      <class name="Package_Response_11_10_2025.Response_1">
        <test-method signature="Response200()[pri:0, instance:Package_Response_11_10_2025.Response_1@b2c9a9c]" started-at="2025-10-12T07:37:49 IST" name="Response200" finished-at="2025-10-12T07:37:49 IST" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Response200 -->
      </class> <!-- Package_Response_11_10_2025.Response_1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
